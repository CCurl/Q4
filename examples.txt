Q4 examples:

; To enter a comment: 
    0( here is a comment )
    ; here is another comment
  
;   if (cc) { print("Yes") } else { print("No") }
    cc{"Yes"}{"No"}?

 ; xx = (aa == bb) ? cc : dd;
    aa bb={cc}{dd}?xx:

; To make sure F < T
     Q4 code:             %%>{$}0?
     Forth equivalent:    OVER OVER > IF SWAP THEN
     C equivalent:        if (f > t) { int x = f; f = t; t = x; }

; To do something (in this case, call lp) nn times:
    nn 1[lp^]

; To print numbers from F to T:
    Q4 code:             ff tt[I.B]
    Forth equivalent:    F T FOR I . NEXT
    C equivalent:        for (int i = F; i <= T; i)) { printf("%d ", i); }

; One way to copy N bytes from A to B
    nn aa bb dd: ss: 1[ss+ C@ dd+ C!]   ; (N F T--) copy bytes
    
; One way to copy N longs from A to B
    nn aa bb dd: ss: 1[ss @ dd ! ss4+ss: dd4+dd:]   ; (N F T--) copy longs

; A simple benchmark for a 100 million decrement and FOR loop:
    {#10<{0.}0?.}n2:          ; A02 (N--)     print N with 0 pad to 2
    {#100<{0.}0?n2G}n3:       ; A03 (N--)     print N with 0 pad to 3
    {T$-1KS$."."n3G}el:       ; A51 (T--)     ELAPSED
    100KK T$ (Q) el^
    100KK T$ 1[] el^

; One way to display the currently defined code:
    1 ha Q[I D@ #, ':= {I 3- D@ 125={N} 0 ? } 0 ?]

; To exit Q4:
    XT
